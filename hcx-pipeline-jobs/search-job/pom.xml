<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.swasth</groupId>
		<artifactId>pipeline-jobs</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>search-job</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>SearchJob</name>

	<repositories>
		<repository>
			<id>my-local-repo</id>
			<url>file://${user.home}/.m2/repository</url>
		</repository>
		<repository>
			<id>apache.snapshots</id>
			<name>Apache Development Snapshot Repository</name>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.swasth</groupId>
			<artifactId>core</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.12.5</version>
		</dependency>
		<!-- Apache Flink dependencies -->
		<!-- These dependencies are provided, because they should not be packaged into the JAR file. -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-java</artifactId>
			<version>${flink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_${scala.version}</artifactId>
			<version>${flink.version}</version>
		</dependency>
		<!-- Add connector dependencies here. They must be in the default scope (compile). -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-core</artifactId>
			<version>${flink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-kafka_${scala.version}</artifactId>
			<version>${flink.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>1.3.3</version>
			<scope>compile</scope>
		</dependency>
		<!-- Add logging framework, to produce console output when running in the IDE. -->
		<!-- These dependencies are excluded from the application JAR by default. -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Adding test dependencies-->
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.swasth</groupId>
			<artifactId>core</artifactId>
			<version>1.0.0</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.alchim31.maven</groupId>
			<artifactId>scala-maven-plugin</artifactId>
			<version>4.3.1</version>
			<type>maven-plugin</type>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-clients_${scala.version}</artifactId>
			<version>${flink.version}</version>
		</dependency>
<!--		&lt;!&ndash; https://mvnrepository.com/artifact/org.apache.flink/flink-test-utils &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>org.apache.flink</groupId>-->
<!--			<artifactId>flink-test-utils_${scala.version}</artifactId>-->
<!--			<version>${flink.version}</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
<!--		&lt;!&ndash; https://mvnrepository.com/artifact/org.apache.flink/flink-runtime &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>org.apache.flink</groupId>-->
<!--			<artifactId>flink-runtime_${scala.version}</artifactId>-->
<!--			<version>${flink.version}</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.apache.flink</groupId>-->
<!--			<artifactId>flink-streaming-java_2.12</artifactId>-->
<!--			<version>1.12.0</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->

	</dependencies>

	<build>
		<plugins>

			<!-- Java Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.target.runtime}</source>
					<target>${java.target.runtime}</target>
				</configuration>
			</plugin>
			<!-- We use the maven-shade plugin to create a fat jar that contains all necessary dependencies. -->
			<!-- Change the value of <mainClass>...</mainClass> if your program entry point changes. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<!-- Run shade goal on package phase -->
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<artifactSet>
								<excludes>
									<exclude>org.apache.flink:flink-shaded-force-shading</exclude>
									<exclude>com.google.code.findbugs:jsr305</exclude>
									<exclude>org.slf4j:*</exclude>
									<exclude>org.apache.logging.log4j:*</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<!-- Do not copy the signatures in the META-INF folder.
									Otherwise, this might cause SecurityExceptions when using the JAR. -->
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.swasth.dp.search.task.CompositeSearchTask</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--            <plugin>-->
			<!--                <groupId>net.alchim31.maven</groupId>-->
			<!--                <artifactId>scala-maven-plugin</artifactId>-->
			<!--                <version>3.2.2</version>-->
			<!--                <configuration>-->
			<!--                    <source>${java.target.runtime}</source>-->
			<!--                    <target>${java.target.runtime}</target>-->
			<!--                    <checkMultipleScalaVersions>false</checkMultipleScalaVersions>-->
			<!--                </configuration>-->
			<!--                <executions>-->
			<!--                    <execution>-->
			<!--                        <id>scala-compile-first</id>-->
			<!--                        <phase>process-resources</phase>-->
			<!--                        <goals>-->
			<!--                            <goal>add-source</goal>-->
			<!--                            <goal>compile</goal>-->
			<!--                        </goals>-->
			<!--                    </execution>-->
			<!--                    <execution>-->
			<!--                        <id>scala-test-compile</id>-->
			<!--                        <phase>process-test-resources</phase>-->
			<!--                        <goals>-->
			<!--                            <goal>testCompile</goal>-->
			<!--                        </goals>-->
			<!--                    </execution>-->
			<!--                </executions>-->
			<!--            </plugin>-->
		</plugins>
	</build>
</project>
